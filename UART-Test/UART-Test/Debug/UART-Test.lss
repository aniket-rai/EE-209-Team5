
UART-Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000005a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000550  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000005a4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005d4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000614  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c03  00000000  00000000  0000067c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000096b  00000000  00000000  0000127f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000526  00000000  00000000  00001bea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000130  00000000  00000000  00002110  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004f8  00000000  00000000  00002240  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000024f  00000000  00000000  00002738  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00002987  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  10:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  14:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  18:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  1c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  20:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  24:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  28:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  2c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  30:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  34:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  38:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  3c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  40:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  44:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  48:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  4c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  50:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  54:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  58:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  5c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  60:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  64:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  68:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  6c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  70:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  74:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  78:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  7c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  80:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  84:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  88:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  8c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  90:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  94:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  98:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  9c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  ac:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  b0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61
  c0:	0e 94 66 00 	call	0xcc	; 0xcc <main>
  c4:	0c 94 a6 02 	jmp	0x54c	; 0x54c <_exit>

000000c8 <__bad_interrupt>:
  c8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000cc <main>:

#include <avr/io.h>
#include "uart.h"


int main(void) {
  cc:	cf 93       	push	r28
  ce:	df 93       	push	r29
  d0:	cd b7       	in	r28, 0x3d	; 61
  d2:	de b7       	in	r29, 0x3e	; 62
	init_uart(9600);
  d4:	80 e8       	ldi	r24, 0x80	; 128
  d6:	95 e2       	ldi	r25, 0x25	; 37
  d8:	0e 94 83 00 	call	0x106	; 0x106 <init_uart>
    /* Replace with your application code */
    while (1) 
    {
		transmitCurrent(1);
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	0e 94 03 01 	call	0x206	; 0x206 <transmitCurrent>
		transmitCurrent(11);
  e4:	8b e0       	ldi	r24, 0x0B	; 11
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	0e 94 03 01 	call	0x206	; 0x206 <transmitCurrent>
		transmitCurrent(99.944);
  ec:	64 e5       	ldi	r22, 0x54	; 84
  ee:	73 ee       	ldi	r23, 0xE3	; 227
  f0:	87 ec       	ldi	r24, 0xC7	; 199
  f2:	92 e4       	ldi	r25, 0x42	; 66
  f4:	0e 94 03 01 	call	0x206	; 0x206 <transmitCurrent>
		transmitCurrent(999.4265);
  f8:	6c e4       	ldi	r22, 0x4C	; 76
  fa:	7b ed       	ldi	r23, 0xDB	; 219
  fc:	89 e7       	ldi	r24, 0x79	; 121
  fe:	94 e4       	ldi	r25, 0x44	; 68
 100:	0e 94 03 01 	call	0x206	; 0x206 <transmitCurrent>
    }
 104:	eb cf       	rjmp	.-42     	; 0xdc <main+0x10>

00000106 <init_uart>:

		// New line + Startline
		transmit_uart(NEWLINE);
		transmit_uart(STARTLINE);
	}
}
 106:	cf 93       	push	r28
 108:	df 93       	push	r29
 10a:	00 d0       	rcall	.+0      	; 0x10c <init_uart+0x6>
 10c:	cd b7       	in	r28, 0x3d	; 61
 10e:	de b7       	in	r29, 0x3e	; 62
 110:	9a 83       	std	Y+2, r25	; 0x02
 112:	89 83       	std	Y+1, r24	; 0x01
 114:	82 ec       	ldi	r24, 0xC2	; 194
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	22 ec       	ldi	r18, 0xC2	; 194
 11a:	30 e0       	ldi	r19, 0x00	; 0
 11c:	f9 01       	movw	r30, r18
 11e:	20 81       	ld	r18, Z
 120:	2f 7b       	andi	r18, 0xBF	; 191
 122:	fc 01       	movw	r30, r24
 124:	20 83       	st	Z, r18
 126:	82 ec       	ldi	r24, 0xC2	; 194
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	22 ec       	ldi	r18, 0xC2	; 194
 12c:	30 e0       	ldi	r19, 0x00	; 0
 12e:	f9 01       	movw	r30, r18
 130:	20 81       	ld	r18, Z
 132:	2f 77       	andi	r18, 0x7F	; 127
 134:	fc 01       	movw	r30, r24
 136:	20 83       	st	Z, r18
 138:	81 ec       	ldi	r24, 0xC1	; 193
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	21 ec       	ldi	r18, 0xC1	; 193
 13e:	30 e0       	ldi	r19, 0x00	; 0
 140:	f9 01       	movw	r30, r18
 142:	20 81       	ld	r18, Z
 144:	2b 7f       	andi	r18, 0xFB	; 251
 146:	fc 01       	movw	r30, r24
 148:	20 83       	st	Z, r18
 14a:	82 ec       	ldi	r24, 0xC2	; 194
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	22 ec       	ldi	r18, 0xC2	; 194
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	f9 01       	movw	r30, r18
 154:	20 81       	ld	r18, Z
 156:	22 60       	ori	r18, 0x02	; 2
 158:	fc 01       	movw	r30, r24
 15a:	20 83       	st	Z, r18
 15c:	82 ec       	ldi	r24, 0xC2	; 194
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	22 ec       	ldi	r18, 0xC2	; 194
 162:	30 e0       	ldi	r19, 0x00	; 0
 164:	f9 01       	movw	r30, r18
 166:	20 81       	ld	r18, Z
 168:	24 60       	ori	r18, 0x04	; 4
 16a:	fc 01       	movw	r30, r24
 16c:	20 83       	st	Z, r18
 16e:	84 ec       	ldi	r24, 0xC4	; 196
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	27 e6       	ldi	r18, 0x67	; 103
 174:	30 e0       	ldi	r19, 0x00	; 0
 176:	fc 01       	movw	r30, r24
 178:	31 83       	std	Z+1, r19	; 0x01
 17a:	20 83       	st	Z, r18
 17c:	81 ec       	ldi	r24, 0xC1	; 193
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	21 ec       	ldi	r18, 0xC1	; 193
 182:	30 e0       	ldi	r19, 0x00	; 0
 184:	f9 01       	movw	r30, r18
 186:	20 81       	ld	r18, Z
 188:	28 60       	ori	r18, 0x08	; 8
 18a:	fc 01       	movw	r30, r24
 18c:	20 83       	st	Z, r18
 18e:	82 ec       	ldi	r24, 0xC2	; 194
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	22 ec       	ldi	r18, 0xC2	; 194
 194:	30 e0       	ldi	r19, 0x00	; 0
 196:	f9 01       	movw	r30, r18
 198:	20 81       	ld	r18, Z
 19a:	2f 7e       	andi	r18, 0xEF	; 239
 19c:	fc 01       	movw	r30, r24
 19e:	20 83       	st	Z, r18
 1a0:	82 ec       	ldi	r24, 0xC2	; 194
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	22 ec       	ldi	r18, 0xC2	; 194
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	f9 01       	movw	r30, r18
 1aa:	20 81       	ld	r18, Z
 1ac:	2f 7e       	andi	r18, 0xEF	; 239
 1ae:	fc 01       	movw	r30, r24
 1b0:	20 83       	st	Z, r18
 1b2:	82 ec       	ldi	r24, 0xC2	; 194
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	22 ec       	ldi	r18, 0xC2	; 194
 1b8:	30 e0       	ldi	r19, 0x00	; 0
 1ba:	f9 01       	movw	r30, r18
 1bc:	20 81       	ld	r18, Z
 1be:	27 7f       	andi	r18, 0xF7	; 247
 1c0:	fc 01       	movw	r30, r24
 1c2:	20 83       	st	Z, r18
 1c4:	00 00       	nop
 1c6:	0f 90       	pop	r0
 1c8:	0f 90       	pop	r0
 1ca:	df 91       	pop	r29
 1cc:	cf 91       	pop	r28
 1ce:	08 95       	ret

000001d0 <transmit_uart>:
 1d0:	cf 93       	push	r28
 1d2:	df 93       	push	r29
 1d4:	1f 92       	push	r1
 1d6:	cd b7       	in	r28, 0x3d	; 61
 1d8:	de b7       	in	r29, 0x3e	; 62
 1da:	89 83       	std	Y+1, r24	; 0x01
 1dc:	00 00       	nop
 1de:	80 ec       	ldi	r24, 0xC0	; 192
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	fc 01       	movw	r30, r24
 1e4:	80 81       	ld	r24, Z
 1e6:	88 2f       	mov	r24, r24
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	80 72       	andi	r24, 0x20	; 32
 1ec:	99 27       	eor	r25, r25
 1ee:	89 2b       	or	r24, r25
 1f0:	b1 f3       	breq	.-20     	; 0x1de <transmit_uart+0xe>
 1f2:	86 ec       	ldi	r24, 0xC6	; 198
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	29 81       	ldd	r18, Y+1	; 0x01
 1f8:	fc 01       	movw	r30, r24
 1fa:	20 83       	st	Z, r18
 1fc:	00 00       	nop
 1fe:	0f 90       	pop	r0
 200:	df 91       	pop	r29
 202:	cf 91       	pop	r28
 204:	08 95       	ret

00000206 <transmitCurrent>:

/* Current Transmission Function */
void transmitCurrent(double data) {
 206:	cf 93       	push	r28
 208:	df 93       	push	r29
 20a:	cd b7       	in	r28, 0x3d	; 61
 20c:	de b7       	in	r29, 0x3e	; 62
 20e:	28 97       	sbiw	r28, 0x08	; 8
 210:	0f b6       	in	r0, 0x3f	; 63
 212:	f8 94       	cli
 214:	de bf       	out	0x3e, r29	; 62
 216:	0f be       	out	0x3f, r0	; 63
 218:	cd bf       	out	0x3d, r28	; 61
 21a:	6d 83       	std	Y+5, r22	; 0x05
 21c:	7e 83       	std	Y+6, r23	; 0x06
 21e:	8f 83       	std	Y+7, r24	; 0x07
 220:	98 87       	std	Y+8, r25	; 0x08
	transmit_uart(I);
 222:	89 e4       	ldi	r24, 0x49	; 73
 224:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <transmit_uart>
	transmit_uart(EQ);
 228:	8d e3       	ldi	r24, 0x3D	; 61
 22a:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <transmit_uart>

	// transmit 100.00 column
	uint8_t hundreds = (uint8_t)data/100;
 22e:	6d 81       	ldd	r22, Y+5	; 0x05
 230:	7e 81       	ldd	r23, Y+6	; 0x06
 232:	8f 81       	ldd	r24, Y+7	; 0x07
 234:	98 85       	ldd	r25, Y+8	; 0x08
 236:	0e 94 91 01 	call	0x322	; 0x322 <__fixunssfsi>
 23a:	dc 01       	movw	r26, r24
 23c:	cb 01       	movw	r24, r22
 23e:	98 2f       	mov	r25, r24
 240:	89 e2       	ldi	r24, 0x29	; 41
 242:	98 9f       	mul	r25, r24
 244:	81 2d       	mov	r24, r1
 246:	11 24       	eor	r1, r1
 248:	82 95       	swap	r24
 24a:	8f 70       	andi	r24, 0x0F	; 15
 24c:	89 83       	std	Y+1, r24	; 0x01
	transmit_uart(hundreds + 48);
 24e:	89 81       	ldd	r24, Y+1	; 0x01
 250:	80 5d       	subi	r24, 0xD0	; 208
 252:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <transmit_uart>

	// trasmit 10.00 column
	uint8_t tens = ((uint8_t)data - hundreds*100)/10;
 256:	6d 81       	ldd	r22, Y+5	; 0x05
 258:	7e 81       	ldd	r23, Y+6	; 0x06
 25a:	8f 81       	ldd	r24, Y+7	; 0x07
 25c:	98 85       	ldd	r25, Y+8	; 0x08
 25e:	0e 94 91 01 	call	0x322	; 0x322 <__fixunssfsi>
 262:	dc 01       	movw	r26, r24
 264:	cb 01       	movw	r24, r22
 266:	28 2f       	mov	r18, r24
 268:	30 e0       	ldi	r19, 0x00	; 0
 26a:	89 81       	ldd	r24, Y+1	; 0x01
 26c:	48 2f       	mov	r20, r24
 26e:	50 e0       	ldi	r21, 0x00	; 0
 270:	6c e9       	ldi	r22, 0x9C	; 156
 272:	64 03       	mulsu	r22, r20
 274:	c0 01       	movw	r24, r0
 276:	65 9f       	mul	r22, r21
 278:	90 0d       	add	r25, r0
 27a:	11 24       	eor	r1, r1
 27c:	82 0f       	add	r24, r18
 27e:	93 1f       	adc	r25, r19
 280:	2a e0       	ldi	r18, 0x0A	; 10
 282:	30 e0       	ldi	r19, 0x00	; 0
 284:	b9 01       	movw	r22, r18
 286:	0e 94 7e 02 	call	0x4fc	; 0x4fc <__divmodhi4>
 28a:	cb 01       	movw	r24, r22
 28c:	8a 83       	std	Y+2, r24	; 0x02
	transmit_uart(tens + 48);
 28e:	8a 81       	ldd	r24, Y+2	; 0x02
 290:	80 5d       	subi	r24, 0xD0	; 208
 292:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <transmit_uart>

	// transmit 1.00 column
	uint8_t ones = (uint8_t)data - hundreds*100 - tens*10;
 296:	6d 81       	ldd	r22, Y+5	; 0x05
 298:	7e 81       	ldd	r23, Y+6	; 0x06
 29a:	8f 81       	ldd	r24, Y+7	; 0x07
 29c:	98 85       	ldd	r25, Y+8	; 0x08
 29e:	0e 94 91 01 	call	0x322	; 0x322 <__fixunssfsi>
 2a2:	dc 01       	movw	r26, r24
 2a4:	cb 01       	movw	r24, r22
 2a6:	38 2f       	mov	r19, r24
 2a8:	8a 81       	ldd	r24, Y+2	; 0x02
 2aa:	88 0f       	add	r24, r24
 2ac:	98 2f       	mov	r25, r24
 2ae:	99 0f       	add	r25, r25
 2b0:	99 0f       	add	r25, r25
 2b2:	89 0f       	add	r24, r25
 2b4:	81 95       	neg	r24
 2b6:	29 81       	ldd	r18, Y+1	; 0x01
 2b8:	9c e9       	ldi	r25, 0x9C	; 156
 2ba:	29 9f       	mul	r18, r25
 2bc:	90 2d       	mov	r25, r0
 2be:	11 24       	eor	r1, r1
 2c0:	89 0f       	add	r24, r25
 2c2:	83 0f       	add	r24, r19
 2c4:	8b 83       	std	Y+3, r24	; 0x03
	transmit_uart(ones + 48);
 2c6:	8b 81       	ldd	r24, Y+3	; 0x03
 2c8:	80 5d       	subi	r24, 0xD0	; 208
 2ca:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <transmit_uart>

	// transmit 0.10 column
	transmit_uart(DOT);
 2ce:	8e e2       	ldi	r24, 0x2E	; 46
 2d0:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <transmit_uart>
	uint8_t oneth = (uint8_t)(data * 10);
 2d4:	20 e0       	ldi	r18, 0x00	; 0
 2d6:	30 e0       	ldi	r19, 0x00	; 0
 2d8:	40 e2       	ldi	r20, 0x20	; 32
 2da:	51 e4       	ldi	r21, 0x41	; 65
 2dc:	6d 81       	ldd	r22, Y+5	; 0x05
 2de:	7e 81       	ldd	r23, Y+6	; 0x06
 2e0:	8f 81       	ldd	r24, Y+7	; 0x07
 2e2:	98 85       	ldd	r25, Y+8	; 0x08
 2e4:	0e 94 11 02 	call	0x422	; 0x422 <__mulsf3>
 2e8:	dc 01       	movw	r26, r24
 2ea:	cb 01       	movw	r24, r22
 2ec:	bc 01       	movw	r22, r24
 2ee:	cd 01       	movw	r24, r26
 2f0:	0e 94 91 01 	call	0x322	; 0x322 <__fixunssfsi>
 2f4:	dc 01       	movw	r26, r24
 2f6:	cb 01       	movw	r24, r22
 2f8:	8c 83       	std	Y+4, r24	; 0x04
	transmit_uart(oneth + 48);
 2fa:	8c 81       	ldd	r24, Y+4	; 0x04
 2fc:	80 5d       	subi	r24, 0xD0	; 208
 2fe:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <transmit_uart>

	// New line + Startline
	transmit_uart(NEWLINE);
 302:	8a e0       	ldi	r24, 0x0A	; 10
 304:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <transmit_uart>
	transmit_uart(STARTLINE);
 308:	8d e0       	ldi	r24, 0x0D	; 13
 30a:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <transmit_uart>
}
 30e:	00 00       	nop
 310:	28 96       	adiw	r28, 0x08	; 8
 312:	0f b6       	in	r0, 0x3f	; 63
 314:	f8 94       	cli
 316:	de bf       	out	0x3e, r29	; 62
 318:	0f be       	out	0x3f, r0	; 63
 31a:	cd bf       	out	0x3d, r28	; 61
 31c:	df 91       	pop	r29
 31e:	cf 91       	pop	r28
 320:	08 95       	ret

00000322 <__fixunssfsi>:
 322:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <__fp_splitA>
 326:	88 f0       	brcs	.+34     	; 0x34a <__fixunssfsi+0x28>
 328:	9f 57       	subi	r25, 0x7F	; 127
 32a:	98 f0       	brcs	.+38     	; 0x352 <__fixunssfsi+0x30>
 32c:	b9 2f       	mov	r27, r25
 32e:	99 27       	eor	r25, r25
 330:	b7 51       	subi	r27, 0x17	; 23
 332:	b0 f0       	brcs	.+44     	; 0x360 <__fixunssfsi+0x3e>
 334:	e1 f0       	breq	.+56     	; 0x36e <__fixunssfsi+0x4c>
 336:	66 0f       	add	r22, r22
 338:	77 1f       	adc	r23, r23
 33a:	88 1f       	adc	r24, r24
 33c:	99 1f       	adc	r25, r25
 33e:	1a f0       	brmi	.+6      	; 0x346 <__fixunssfsi+0x24>
 340:	ba 95       	dec	r27
 342:	c9 f7       	brne	.-14     	; 0x336 <__fixunssfsi+0x14>
 344:	14 c0       	rjmp	.+40     	; 0x36e <__fixunssfsi+0x4c>
 346:	b1 30       	cpi	r27, 0x01	; 1
 348:	91 f0       	breq	.+36     	; 0x36e <__fixunssfsi+0x4c>
 34a:	0e 94 0a 02 	call	0x414	; 0x414 <__fp_zero>
 34e:	b1 e0       	ldi	r27, 0x01	; 1
 350:	08 95       	ret
 352:	0c 94 0a 02 	jmp	0x414	; 0x414 <__fp_zero>
 356:	67 2f       	mov	r22, r23
 358:	78 2f       	mov	r23, r24
 35a:	88 27       	eor	r24, r24
 35c:	b8 5f       	subi	r27, 0xF8	; 248
 35e:	39 f0       	breq	.+14     	; 0x36e <__fixunssfsi+0x4c>
 360:	b9 3f       	cpi	r27, 0xF9	; 249
 362:	cc f3       	brlt	.-14     	; 0x356 <__fixunssfsi+0x34>
 364:	86 95       	lsr	r24
 366:	77 95       	ror	r23
 368:	67 95       	ror	r22
 36a:	b3 95       	inc	r27
 36c:	d9 f7       	brne	.-10     	; 0x364 <__fixunssfsi+0x42>
 36e:	3e f4       	brtc	.+14     	; 0x37e <__fixunssfsi+0x5c>
 370:	90 95       	com	r25
 372:	80 95       	com	r24
 374:	70 95       	com	r23
 376:	61 95       	neg	r22
 378:	7f 4f       	sbci	r23, 0xFF	; 255
 37a:	8f 4f       	sbci	r24, 0xFF	; 255
 37c:	9f 4f       	sbci	r25, 0xFF	; 255
 37e:	08 95       	ret

00000380 <__fp_inf>:
 380:	97 f9       	bld	r25, 7
 382:	9f 67       	ori	r25, 0x7F	; 127
 384:	80 e8       	ldi	r24, 0x80	; 128
 386:	70 e0       	ldi	r23, 0x00	; 0
 388:	60 e0       	ldi	r22, 0x00	; 0
 38a:	08 95       	ret

0000038c <__fp_nan>:
 38c:	9f ef       	ldi	r25, 0xFF	; 255
 38e:	80 ec       	ldi	r24, 0xC0	; 192
 390:	08 95       	ret

00000392 <__fp_pscA>:
 392:	00 24       	eor	r0, r0
 394:	0a 94       	dec	r0
 396:	16 16       	cp	r1, r22
 398:	17 06       	cpc	r1, r23
 39a:	18 06       	cpc	r1, r24
 39c:	09 06       	cpc	r0, r25
 39e:	08 95       	ret

000003a0 <__fp_pscB>:
 3a0:	00 24       	eor	r0, r0
 3a2:	0a 94       	dec	r0
 3a4:	12 16       	cp	r1, r18
 3a6:	13 06       	cpc	r1, r19
 3a8:	14 06       	cpc	r1, r20
 3aa:	05 06       	cpc	r0, r21
 3ac:	08 95       	ret

000003ae <__fp_round>:
 3ae:	09 2e       	mov	r0, r25
 3b0:	03 94       	inc	r0
 3b2:	00 0c       	add	r0, r0
 3b4:	11 f4       	brne	.+4      	; 0x3ba <__fp_round+0xc>
 3b6:	88 23       	and	r24, r24
 3b8:	52 f0       	brmi	.+20     	; 0x3ce <__fp_round+0x20>
 3ba:	bb 0f       	add	r27, r27
 3bc:	40 f4       	brcc	.+16     	; 0x3ce <__fp_round+0x20>
 3be:	bf 2b       	or	r27, r31
 3c0:	11 f4       	brne	.+4      	; 0x3c6 <__fp_round+0x18>
 3c2:	60 ff       	sbrs	r22, 0
 3c4:	04 c0       	rjmp	.+8      	; 0x3ce <__fp_round+0x20>
 3c6:	6f 5f       	subi	r22, 0xFF	; 255
 3c8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ca:	8f 4f       	sbci	r24, 0xFF	; 255
 3cc:	9f 4f       	sbci	r25, 0xFF	; 255
 3ce:	08 95       	ret

000003d0 <__fp_split3>:
 3d0:	57 fd       	sbrc	r21, 7
 3d2:	90 58       	subi	r25, 0x80	; 128
 3d4:	44 0f       	add	r20, r20
 3d6:	55 1f       	adc	r21, r21
 3d8:	59 f0       	breq	.+22     	; 0x3f0 <__fp_splitA+0x10>
 3da:	5f 3f       	cpi	r21, 0xFF	; 255
 3dc:	71 f0       	breq	.+28     	; 0x3fa <__fp_splitA+0x1a>
 3de:	47 95       	ror	r20

000003e0 <__fp_splitA>:
 3e0:	88 0f       	add	r24, r24
 3e2:	97 fb       	bst	r25, 7
 3e4:	99 1f       	adc	r25, r25
 3e6:	61 f0       	breq	.+24     	; 0x400 <__LOCK_REGION_LENGTH__>
 3e8:	9f 3f       	cpi	r25, 0xFF	; 255
 3ea:	79 f0       	breq	.+30     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3ec:	87 95       	ror	r24
 3ee:	08 95       	ret
 3f0:	12 16       	cp	r1, r18
 3f2:	13 06       	cpc	r1, r19
 3f4:	14 06       	cpc	r1, r20
 3f6:	55 1f       	adc	r21, r21
 3f8:	f2 cf       	rjmp	.-28     	; 0x3de <__fp_split3+0xe>
 3fa:	46 95       	lsr	r20
 3fc:	f1 df       	rcall	.-30     	; 0x3e0 <__fp_splitA>
 3fe:	08 c0       	rjmp	.+16     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 400:	16 16       	cp	r1, r22
 402:	17 06       	cpc	r1, r23
 404:	18 06       	cpc	r1, r24
 406:	99 1f       	adc	r25, r25
 408:	f1 cf       	rjmp	.-30     	; 0x3ec <__fp_splitA+0xc>
 40a:	86 95       	lsr	r24
 40c:	71 05       	cpc	r23, r1
 40e:	61 05       	cpc	r22, r1
 410:	08 94       	sec
 412:	08 95       	ret

00000414 <__fp_zero>:
 414:	e8 94       	clt

00000416 <__fp_szero>:
 416:	bb 27       	eor	r27, r27
 418:	66 27       	eor	r22, r22
 41a:	77 27       	eor	r23, r23
 41c:	cb 01       	movw	r24, r22
 41e:	97 f9       	bld	r25, 7
 420:	08 95       	ret

00000422 <__mulsf3>:
 422:	0e 94 24 02 	call	0x448	; 0x448 <__mulsf3x>
 426:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__fp_round>
 42a:	0e 94 c9 01 	call	0x392	; 0x392 <__fp_pscA>
 42e:	38 f0       	brcs	.+14     	; 0x43e <__mulsf3+0x1c>
 430:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <__fp_pscB>
 434:	20 f0       	brcs	.+8      	; 0x43e <__mulsf3+0x1c>
 436:	95 23       	and	r25, r21
 438:	11 f0       	breq	.+4      	; 0x43e <__mulsf3+0x1c>
 43a:	0c 94 c0 01 	jmp	0x380	; 0x380 <__fp_inf>
 43e:	0c 94 c6 01 	jmp	0x38c	; 0x38c <__fp_nan>
 442:	11 24       	eor	r1, r1
 444:	0c 94 0b 02 	jmp	0x416	; 0x416 <__fp_szero>

00000448 <__mulsf3x>:
 448:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <__fp_split3>
 44c:	70 f3       	brcs	.-36     	; 0x42a <__mulsf3+0x8>

0000044e <__mulsf3_pse>:
 44e:	95 9f       	mul	r25, r21
 450:	c1 f3       	breq	.-16     	; 0x442 <__mulsf3+0x20>
 452:	95 0f       	add	r25, r21
 454:	50 e0       	ldi	r21, 0x00	; 0
 456:	55 1f       	adc	r21, r21
 458:	62 9f       	mul	r22, r18
 45a:	f0 01       	movw	r30, r0
 45c:	72 9f       	mul	r23, r18
 45e:	bb 27       	eor	r27, r27
 460:	f0 0d       	add	r31, r0
 462:	b1 1d       	adc	r27, r1
 464:	63 9f       	mul	r22, r19
 466:	aa 27       	eor	r26, r26
 468:	f0 0d       	add	r31, r0
 46a:	b1 1d       	adc	r27, r1
 46c:	aa 1f       	adc	r26, r26
 46e:	64 9f       	mul	r22, r20
 470:	66 27       	eor	r22, r22
 472:	b0 0d       	add	r27, r0
 474:	a1 1d       	adc	r26, r1
 476:	66 1f       	adc	r22, r22
 478:	82 9f       	mul	r24, r18
 47a:	22 27       	eor	r18, r18
 47c:	b0 0d       	add	r27, r0
 47e:	a1 1d       	adc	r26, r1
 480:	62 1f       	adc	r22, r18
 482:	73 9f       	mul	r23, r19
 484:	b0 0d       	add	r27, r0
 486:	a1 1d       	adc	r26, r1
 488:	62 1f       	adc	r22, r18
 48a:	83 9f       	mul	r24, r19
 48c:	a0 0d       	add	r26, r0
 48e:	61 1d       	adc	r22, r1
 490:	22 1f       	adc	r18, r18
 492:	74 9f       	mul	r23, r20
 494:	33 27       	eor	r19, r19
 496:	a0 0d       	add	r26, r0
 498:	61 1d       	adc	r22, r1
 49a:	23 1f       	adc	r18, r19
 49c:	84 9f       	mul	r24, r20
 49e:	60 0d       	add	r22, r0
 4a0:	21 1d       	adc	r18, r1
 4a2:	82 2f       	mov	r24, r18
 4a4:	76 2f       	mov	r23, r22
 4a6:	6a 2f       	mov	r22, r26
 4a8:	11 24       	eor	r1, r1
 4aa:	9f 57       	subi	r25, 0x7F	; 127
 4ac:	50 40       	sbci	r21, 0x00	; 0
 4ae:	9a f0       	brmi	.+38     	; 0x4d6 <__mulsf3_pse+0x88>
 4b0:	f1 f0       	breq	.+60     	; 0x4ee <__mulsf3_pse+0xa0>
 4b2:	88 23       	and	r24, r24
 4b4:	4a f0       	brmi	.+18     	; 0x4c8 <__mulsf3_pse+0x7a>
 4b6:	ee 0f       	add	r30, r30
 4b8:	ff 1f       	adc	r31, r31
 4ba:	bb 1f       	adc	r27, r27
 4bc:	66 1f       	adc	r22, r22
 4be:	77 1f       	adc	r23, r23
 4c0:	88 1f       	adc	r24, r24
 4c2:	91 50       	subi	r25, 0x01	; 1
 4c4:	50 40       	sbci	r21, 0x00	; 0
 4c6:	a9 f7       	brne	.-22     	; 0x4b2 <__mulsf3_pse+0x64>
 4c8:	9e 3f       	cpi	r25, 0xFE	; 254
 4ca:	51 05       	cpc	r21, r1
 4cc:	80 f0       	brcs	.+32     	; 0x4ee <__mulsf3_pse+0xa0>
 4ce:	0c 94 c0 01 	jmp	0x380	; 0x380 <__fp_inf>
 4d2:	0c 94 0b 02 	jmp	0x416	; 0x416 <__fp_szero>
 4d6:	5f 3f       	cpi	r21, 0xFF	; 255
 4d8:	e4 f3       	brlt	.-8      	; 0x4d2 <__mulsf3_pse+0x84>
 4da:	98 3e       	cpi	r25, 0xE8	; 232
 4dc:	d4 f3       	brlt	.-12     	; 0x4d2 <__mulsf3_pse+0x84>
 4de:	86 95       	lsr	r24
 4e0:	77 95       	ror	r23
 4e2:	67 95       	ror	r22
 4e4:	b7 95       	ror	r27
 4e6:	f7 95       	ror	r31
 4e8:	e7 95       	ror	r30
 4ea:	9f 5f       	subi	r25, 0xFF	; 255
 4ec:	c1 f7       	brne	.-16     	; 0x4de <__mulsf3_pse+0x90>
 4ee:	fe 2b       	or	r31, r30
 4f0:	88 0f       	add	r24, r24
 4f2:	91 1d       	adc	r25, r1
 4f4:	96 95       	lsr	r25
 4f6:	87 95       	ror	r24
 4f8:	97 f9       	bld	r25, 7
 4fa:	08 95       	ret

000004fc <__divmodhi4>:
 4fc:	97 fb       	bst	r25, 7
 4fe:	07 2e       	mov	r0, r23
 500:	16 f4       	brtc	.+4      	; 0x506 <__divmodhi4+0xa>
 502:	00 94       	com	r0
 504:	07 d0       	rcall	.+14     	; 0x514 <__divmodhi4_neg1>
 506:	77 fd       	sbrc	r23, 7
 508:	09 d0       	rcall	.+18     	; 0x51c <__divmodhi4_neg2>
 50a:	0e 94 92 02 	call	0x524	; 0x524 <__udivmodhi4>
 50e:	07 fc       	sbrc	r0, 7
 510:	05 d0       	rcall	.+10     	; 0x51c <__divmodhi4_neg2>
 512:	3e f4       	brtc	.+14     	; 0x522 <__divmodhi4_exit>

00000514 <__divmodhi4_neg1>:
 514:	90 95       	com	r25
 516:	81 95       	neg	r24
 518:	9f 4f       	sbci	r25, 0xFF	; 255
 51a:	08 95       	ret

0000051c <__divmodhi4_neg2>:
 51c:	70 95       	com	r23
 51e:	61 95       	neg	r22
 520:	7f 4f       	sbci	r23, 0xFF	; 255

00000522 <__divmodhi4_exit>:
 522:	08 95       	ret

00000524 <__udivmodhi4>:
 524:	aa 1b       	sub	r26, r26
 526:	bb 1b       	sub	r27, r27
 528:	51 e1       	ldi	r21, 0x11	; 17
 52a:	07 c0       	rjmp	.+14     	; 0x53a <__udivmodhi4_ep>

0000052c <__udivmodhi4_loop>:
 52c:	aa 1f       	adc	r26, r26
 52e:	bb 1f       	adc	r27, r27
 530:	a6 17       	cp	r26, r22
 532:	b7 07       	cpc	r27, r23
 534:	10 f0       	brcs	.+4      	; 0x53a <__udivmodhi4_ep>
 536:	a6 1b       	sub	r26, r22
 538:	b7 0b       	sbc	r27, r23

0000053a <__udivmodhi4_ep>:
 53a:	88 1f       	adc	r24, r24
 53c:	99 1f       	adc	r25, r25
 53e:	5a 95       	dec	r21
 540:	a9 f7       	brne	.-22     	; 0x52c <__udivmodhi4_loop>
 542:	80 95       	com	r24
 544:	90 95       	com	r25
 546:	bc 01       	movw	r22, r24
 548:	cd 01       	movw	r24, r26
 54a:	08 95       	ret

0000054c <_exit>:
 54c:	f8 94       	cli

0000054e <__stop_program>:
 54e:	ff cf       	rjmp	.-2      	; 0x54e <__stop_program>
